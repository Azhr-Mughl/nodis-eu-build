{"version":3,"file":"static/js/312.24eed4b4.chunk.js","mappings":"uLAUA,EARgB,WACZ,OACIA,EAAAA,EAAAA,KAAA,OAAAC,SAAK,kBAIb,E,oBCmCA,EAvCsB,WAClB,IAAAC,GAAoBC,EAAAA,EAAAA,MAAZC,EAACF,EAADE,EACFC,GADSH,EAAJI,MACMC,EAAAA,EAAAA,OAGjBC,IAFeC,EAAAA,EAAAA,OAEaC,EAAAA,EAAAA,UAAS,CAAEC,MAAM,EAAOC,QAAQ,KAAQC,GAAAC,EAAAA,EAAAA,GAAAN,EAAA,GAArDO,GAAFF,EAAA,GAAWA,EAAA,IAuBxB,OArBAG,EAAAA,EAAAA,YAAU,WASFX,EAASY,SAASC,SAAS,SAC3BH,EAAU,CAAEJ,MAAM,EAAOC,QAAQ,IACjCO,QAAQC,IAAI,eAGZL,EAAU,CAAEJ,MAAM,EAAOC,QAAQ,IACjCO,QAAQC,IAAI,gBAGpB,GAAG,KAICpB,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,GAAEpB,UACbqB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iBAAgBpB,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,UAASpB,SAAC,aACzBD,EAAAA,EAAAA,KAAA,MAAIqB,UAAU,uBAAsBpB,SAAEG,EAAE,oBAKxD,ECRA,EA1BgB,WAWZ,OACIJ,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,uBAAsBpB,UACjCD,EAAAA,EAAAA,KAACuB,EAAAA,SAAc,CAACC,UAThBxB,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,gBASuBpB,UAClCqB,EAAAA,EAAAA,MAACG,EAAAA,GAAM,CAAAxB,SAAA,EACHD,EAAAA,EAAAA,KAAC0B,EAAAA,GAAK,CAACC,KAAK,IAAIC,SAAS5B,EAAAA,EAAAA,KAAC6B,EAAO,OACjC7B,EAAAA,EAAAA,KAAC0B,EAAAA,GAAK,CAACC,KAAK,OAAOC,SAAS5B,EAAAA,EAAAA,KAAC8B,EAAa,OAC1C9B,EAAAA,EAAAA,KAAC0B,EAAAA,GAAK,CAACC,KAAK,gBAAgBC,SAAS5B,EAAAA,EAAAA,KAAC8B,EAAa,YAOvE,C","sources":["presentation/AdminPortal/Courses/Listing/index.js","presentation/AdminPortal/Courses/AddEditCourse/index.js","presentation/AdminPortal/Courses/index.js"],"sourcesContent":["import React from 'react';\n\nconst Listing = () => {\n    return (\n        <div>\n            Course Listing\n        </div>\n    );\n};\n\nexport default Listing;","import React, {useEffect, useState} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useParams } from 'react-router-dom';\n\nconst AddEditCourse = () => {\n    const { t, i18n } = useTranslation();\n    const location = useLocation();\n    const params = useParams();\n\n    const [action, setAction] = useState({ view: false, update: false });\n\n    useEffect(() => {\n        // setTabHeading('Trainings');\n        // getDropDownData();\n        // if( params.courseId ){\n        //     setAction({ view: false, update: true });\n        // } else {\n        //     setAction({ view: false, update: true });\n        // }\n\n        if (location.pathname.includes('/new')) {\n            setAction({ view: false, update: false });\n            console.log('NEW_FOUND');\n            // getTraining();\n        } else {\n            setAction({ view: false, update: true });\n            console.log('UPDATE_FOUND');\n\n        };\n    }, []);\n    \n\n    return (\n        <div className=\"\">\n            <div className=\"section-header\">\n                <div className=\"primary\">Courses</div>\n                <h4 className=\"title fw-medium mb-0\">{t('add_course')}</h4>\n                {/* <div>Explore insightful blogs, broaden horizons, gain new perspectives.</div> */}\n            </div>\n        </div>\n    );\n};\n\nexport default AddEditCourse;","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport './admin-courses.scss';\nimport Listing from './Listing';\nimport AddEditCourse from './AddEditCourse';\n\nconst Courses = () => {\n\n    const isWaiting = () => {\n        return (\n            <div className=\"lazy-loader\">\n                {/* <img src={asset_loader} alt=\"Loading\" /> */}\n            </div>\n        );\n    };\n\n\n    return (\n        <div className=\"container-fluid py-3\">\n            <React.Suspense fallback={isWaiting()}>\n                <Routes>\n                    <Route path='/' element={<Listing />} />\n                    <Route path='/new' element={<AddEditCourse />} />\n                    <Route path='/edit/:itemId' element={<AddEditCourse />} />\n                    {/* <Route path='dashboard/*' element={<div>Dashboard</div>} /> */}\n                    {/* <Route path='courses/*' element={<Courses />} /> */}\n                </Routes>\n            </React.Suspense>\n        </div>\n    );\n};\n\nexport default Courses;"],"names":["_jsx","children","_useTranslation","useTranslation","t","location","i18n","useLocation","_useState","useParams","useState","view","update","_useState2","_slicedToArray","setAction","useEffect","pathname","includes","console","log","className","_jsxs","React","fallback","Routes","Route","path","element","Listing","AddEditCourse"],"sourceRoot":""}